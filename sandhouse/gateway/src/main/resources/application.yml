server:
  #应用端口
  port: 8081
  #配置ssl证书
#  ssl:
#    enabled: true
#    key-store: classpath:xxx.jks
#    key-store-password: xxxx
#    key-store-type: JKS
#    key-alias: alias
  compression:
    #开启gzip压缩(可以加快网络传输速度)
    enabled: true
    #指定哪些content-type支持压缩,统一在网关进行压缩
    mime-types: application/javascript,text/css,application/json,application/xml,text/html,text/xml,text/plain
#注册客户端配置
eureka:
  instance:
    #心跳间隔时间
    lease-renewal-interval-in-seconds: 10
    #告诉服务端多久未收到心跳则认为该服务关闭
    lease-expiration-duration-in-seconds: 20
    prefer-ip-address: true
  client:
    #定时刷新本地缓存
    #registry-fetch-interval-seconds: 5
    enabled: true
    service-url:
      defaultZone: http://admin:admin@localhost:8080/eureka/
spring:
  application:
    #服务名
    name: service-gateway
  #redis 连接配置
  redis:
    database: 0
    host: localhost
    port: 6379
    password: yzzy65203
    timeout: 5000ms  # 连接超时时间（毫秒）
    lettuce:
      pool:
        max-active: 8   # 连接池最大连接数（使用负值表示没有限制）
        max-wait:   1ms   # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle:   8   # 连接池中的最大空闲连接
        min-idle:   0   # 连接池中的最小空闲连接
  #rabbitmq配置
  rabbitmq:
    host: localhost
    username: guest
    password: guest
    port: 5672
  cloud:
    sentinel:
      transport:
        port: 8081
        dashboard: localhost:8092
      filter:
        enabled: false
    gateway:
      discovery:
        locator:
          #开启从注册中心读取服务名及分发路由
          enabled: true
          #默认以serviceId小写作为路由
          lowerCaseServiceId: true
      #当需要转发到其他路由时的配置
#      routes:
#        - id: service-hi
#          uri: lb://SERVICE-HI
#          predicates:
#            - Path=/demo/**
#          filters:
#            - StripPrefix=1
      #gateway ssl支持
  main:
    allow-bean-definition-overriding: true
#      httpclient:
#        ssl:
#          handshake-timeout-millis: 10000
#          close-notify-flush-timeout-millis: 3000
#          close-notify-read-timeout-millis: 0
#          useInsecureTrustManager: true
#zuul:
#  #此处配置zuul网关代理的路由(如后期服务太多可考虑动态从redis或mysql等进行动态读取)
#  routes:
#    api-order:
#      path: /api-order/**
#      serviceId: service-order
#    api-user:
#      path: /api-user/**
#      serviceId: service-user
#actuator监控检查配置
management:
  endpoints:
    web:
      exposure:
        #加载端点类型
        include: "*"
  endpoint:
    health:
      #健康信息细节显示策略
      show-details: ALWAYS